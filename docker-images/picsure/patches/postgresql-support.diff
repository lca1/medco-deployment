diff --git a/pic-sure-api-data/pom.xml b/pic-sure-api-data/pom.xml
index 3728c5e..14b4e31 100755
--- a/pic-sure-api-data/pom.xml
+++ b/pic-sure-api-data/pom.xml
@@ -37,5 +37,12 @@
 			<groupId>org.hibernate</groupId>
 			<artifactId>hibernate-core</artifactId>
 		</dependency>
+		<!-- hibernate-core for naming strategy -->
+		<dependency>
+			<groupId>org.hibernate</groupId>
+			<artifactId>hibernate-core</artifactId>
+			<version>5.2.13.Final</version>
+			<scope>provided</scope>
+		</dependency>
 	</dependencies>
 </project>
diff --git a/pic-sure-api-data/src/main/java/edu/harvard/dbmi/avillach/data/HibernatePrefixNamingStrategy.java b/pic-sure-api-data/src/main/java/edu/harvard/dbmi/avillach/data/HibernatePrefixNamingStrategy.java
new file mode 100644
index 0000000..3db5f9c
--- /dev/null
+++ b/pic-sure-api-data/src/main/java/edu/harvard/dbmi/avillach/data/HibernatePrefixNamingStrategy.java
@@ -0,0 +1,21 @@
+package edu.harvard.dbmi.avillach.data;
+
+import org.hibernate.boot.model.naming.Identifier;
+import org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl;
+import org.hibernate.engine.jdbc.env.spi.JdbcEnvironment;
+
+
+/**
+ * Physical naming strategy that adds a prefix to the tables.
+ */
+public class HibernatePrefixNamingStrategy extends PhysicalNamingStrategyStandardImpl {
+  private static final String TABLE_PREFIX = "PICSURE_";
+
+	@Override
+	public Identifier toPhysicalTableName(Identifier name, JdbcEnvironment jdbcEnvironment) {
+		return jdbcEnvironment.getIdentifierHelper().toIdentifier(
+      TABLE_PREFIX + name.getText(),
+      name.isQuoted()
+    );
+	}
+}
diff --git a/pic-sure-api-data/src/main/java/edu/harvard/dbmi/avillach/data/entity/BaseEntity.java b/pic-sure-api-data/src/main/java/edu/harvard/dbmi/avillach/data/entity/BaseEntity.java
index 93cdafe..b4f79b0 100644
--- a/pic-sure-api-data/src/main/java/edu/harvard/dbmi/avillach/data/entity/BaseEntity.java
+++ b/pic-sure-api-data/src/main/java/edu/harvard/dbmi/avillach/data/entity/BaseEntity.java
@@ -14,7 +14,7 @@ public abstract class BaseEntity {
 	@GenericGenerator(
 		name = "UUID",
 		strategy = "org.hibernate.id.UUIDGenerator")
-	@Column(columnDefinition = "BINARY(16)")
+	@Column(columnDefinition = "uuid")
 	protected UUID uuid;
 
 	public UUID getUuid() {
diff --git a/pic-sure-api-war/src/main/resources/META-INF/persistence.xml b/pic-sure-api-war/src/main/resources/META-INF/persistence.xml
index 12c75db..ae070f0 100644
--- a/pic-sure-api-war/src/main/resources/META-INF/persistence.xml
+++ b/pic-sure-api-war/src/main/resources/META-INF/persistence.xml
@@ -11,8 +11,8 @@
 		<properties>
 			<property name="hibernate.archive.autodetection" value="class" />
 			<property name="hibernate.show_sql" value="false" />
-			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect" />
-			<property name="hibernate.hbm2ddl.update" value="validate" />
+			<property name="hibernate.hbm2ddl.auto" value="update" />
+			<property name="hibernate.physical_naming_strategy" value="edu.harvard.dbmi.avillach.data.HibernatePrefixNamingStrategy" />
 			<!--
 			https://docs.jboss.org/hibernate/orm/5.2/userguide/html_single/Hibernate_User_Guide.html#configurations-hbmddl
 			For how to use this (hibernate.hbm2ddl) option.
